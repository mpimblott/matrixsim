#include <stdint.h>

#include <SFML/Graphics.hpp>

#include "HUB75.h"
#include "display.h"
#include "driver.h"

constexpr uint8_t dummyData[192] = {
    0x00, 0x00, 0x00,  // black 1
    0xFF, 0xFF, 0xFF,  // white 2
    0x00, 0x00, 0x00,  // black 3
    0xFF, 0xFF, 0xFF,  // white 4
    0x00, 0x00, 0x00,  // black 5
    0xFF, 0xFF, 0xFF,  // white 6
    0x00, 0x00, 0x00,  // black 7
    0x00, 0xFF, 0xFF,  // white 8
    0x00, 0x00, 0x00,  // black 1
    0xFF, 0xFF, 0xFF,  // white 2
    0x00, 0x00, 0x00,  // black 3
    0xFF, 0xFF, 0xFF,  // white 4
    0x00, 0x00, 0x00,  // black 5
    0xFF, 0xFF, 0xFF,  // white 6
    0x00, 0x00, 0x00,  // black 7
    0xFF, 0xFF, 0xFF,  // white 8
    0x00, 0x00, 0x00,  // black 1
    0xFF, 0xFF, 0xFF,  // white 2
    0x00, 0x00, 0x00,  // black 3
    0xFF, 0xFF, 0x55,  // white 4
    0x00, 0x00, 0x00,  // black 5
    0xFF, 0xFF, 0xFF,  // white 6
    0x00, 0x00, 0x00,  // black 7
    0xFF, 0xFF, 0xFF,  // white 8
    0x00, 0x00, 0x00,  // black 1
    0xFF, 0xFF, 0xFF,  // white 2
    0x00, 0x00, 0x00,  // black 3
    0xFF, 0xFF, 0xFF,  // white 4
    0x00, 0x00, 0x00,  // black 5
    0xFF, 0xFF, 0xFF,  // white 6
    0x00, 0x00, 0x00,  // black 7
    0xFF, 0xFF, 0xFF,  // white 8
    0x00, 0x00, 0x00,  // black 1
    0xFF, 0xFF, 0xFF,  // white 2
    0x00, 0x00, 0x00,  // black 3
    0xFF, 0xFF, 0xFF,  // white 4
    0x00, 0x00, 0x00,  // black 5
    0xFF, 0xFF, 0xFF,  // white 6
    0x00, 0x00, 0x00,  // black 7
    0xFF, 0xFF, 0xFF,  // white 8
    0x00, 0x00, 0x00,  // black 1
    0xFF, 0xFF, 0xFF,  // white 2
    0x00, 0x00, 0x00,  // black 3
    0xFF, 0xFF, 0xFF,  // white 4
    0x00, 0x00, 0x00,  // black 5
    0xFF, 0xFF, 0xFF,  // white 6
    0x00, 0x00, 0x00,  // black 7
    0xFF, 0xFF, 0xFF,  // white 8
    0x00, 0x00, 0x00,  // black 1
    0xFF, 0xFF, 0xFF,  // white 2
    0x00, 0x00, 0x00,  // black 3
    0xFF, 0xFF, 0xFF,  // white 4
    0x00, 0x00, 0x00,  // black 5
    0xFF, 0xFF, 0xFF,  // white 6
    0x00, 0x00, 0x00,  // black 7
    0xFF, 0xFF, 0xFF,  // white 8
    0x00, 0x00, 0x00,  // black 1
    0xFF, 0xFF, 0xFF,  // white 2
    0x00, 0x00, 0x00,  // black 3
    0xFF, 0xFF, 0xFF,  // white 4
    0x00, 0x00, 0x00,  // black 5
    0xFF, 0xFF, 0xFF,  // white 6
    0x00, 0x00, 0x00,  // black 7
    0xFF, 0xFF, 0xFF,  // white 8
};

int main() {
  sf::RenderWindow window(sf::VideoMode(500, 500), "test");
  window.setFramerateLimit(600);
  MatrixDisplay display(window);
  HUB75Connector connector(display);
  MatrixDriver driver(connector, 1);
  std::vector<uint8_t> charVector(
      dummyData, dummyData + sizeof(dummyData) / sizeof(uint8_t));

  // for (int i = 0; i < 8; i++) {
  //   for (int j = 0; j < 8 * 3; j += 3) {
  //     const int start_idx = i * 8 * 3;
  //     const uint8_t r = dummyData[start_idx + j];
  //     const uint8_t g = dummyData[start_idx + j + 1];
  //     const uint8_t b = dummyData[start_idx + j + 2];
  //     std::cout << "(" << unsigned(r) << ", " << unsigned(g) << ", "
  //               << unsigned(b) << ")";
  //   }
  //   std::cout << i << std::endl;
  // }

  driver.setBuffer(charVector);
  driver.setBrightness(100);

  // driver.buildSubframeSequence(0);

  while (display.isOpen()) {
    driver.loadNextRow();
    display.update();
  }

  return 0;
}